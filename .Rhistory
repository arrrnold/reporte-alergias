# Cargar paquetes necesarios
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
# Dividir los datos en conjunto de entrenamiento y conjunto de prueba
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.7 * nrow(data), replace = FALSE)
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
# Entrenar el modelo KNN
k <- 1  # Número de vecinos cercanos
knn_model <- knn(
train = as.matrix(train_data[, "numero_alergias"]),
test = as.matrix(test_data[, "numero_alergias"]),
cl = train_data[, "alergias"],
k = k
)
# Cargar paquetes necesarios
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
# Reemplazar campos vacíos con NA
data<-data[data == ""] <- NA
# Guardar el dataset con valores NA como un nuevo archivo CSV
#write.csv(data, file = "usuarios_con_NA.csv", row.names = FALSE)
# Dividir los datos en conjunto de entrenamiento y conjunto de prueba
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.7 * nrow(data), replace = FALSE)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# Reemplazar campos vacíos con NA
data<-data[data == ""] <- NA
# Dividir los datos en conjunto de entrenamiento y conjunto de prueba
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.7 * nrow(data), replace = FALSE)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# Reemplazar campos vacíos con NA
data<-data[data == ""] <- NA
# Cargar paquetes necesarios
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
# Reemplazar campos vacíos con NA
data[data == ""] <- NA
# Guardar el dataset con valores NA como un nuevo archivo CSV
#write.csv(data, file = "usuarios_con_NA.csv", row.names = FALSE)
# Dividir los datos en conjunto de entrenamiento y conjunto de prueba
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.7 * nrow(data), replace = FALSE)
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
# Entrenar el modelo KNN
k <- 1  # Número de vecinos cercanos
knn_model <- knn(
train = as.matrix(train_data[, "numero_alergias"]),
test = as.matrix(test_data[, "numero_alergias"]),
cl = train_data[, "alergias"],
k = k
)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# Reemplazar campos vacíos con NA
data[data == ""] <- NA
# Dividir los datos en conjunto de entrenamiento y conjunto de prueba
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.7 * nrow(data), replace = FALSE)
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
# Entrenar el modelo KNN
k <- 1  # Número de vecinos cercanos
knn_model <- knn(
train = as.matrix(train_data[, "numero_alergias"]),
test = as.matrix(test_data[, "numero_alergias"]),
cl = train_data[, "alergias"],
k = k
)
# Cargar paquetes necesarios
library(class)
library(impute)
# Cargar paquetes necesarios
library(class)
library(imputation)
# Cargar paquetes necesarios
library(class)
library(DMwR)
# Cargar paquetes necesarios
library(class)
library(DMwR)
install.packages("DMwR2")
# Cargar paquetes necesarios
library(class)
library(DMwR)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# Reemplazar campos vacíos con NA
data[data == ""] <- NA
# Dividir los datos en conjunto de entrenamiento y conjunto de prueba
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.7 * nrow(data), replace = FALSE)
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
# Entrenar el modelo KNN
k <- 1  # Número de vecinos cercanos
knn_model <- knn(
train = as.matrix(train_data[, "numero_alergias"]),
test = as.matrix(test_data[, "numero_alergias"]),
cl = train_data[, "alergias"],
k = k
)
# Reemplazar campos vacíos con NA
data[data == "NA"] <- Nada
# Reemplazar campos vacíos con NA
data[data == "NA"] <- "Nada"
# Cargar paquetes necesarios
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
# Reemplazar campos vacíos con NA
data[data == "NA"] <- "Nada"
# Guardar el dataset con valores NA como un nuevo archivo CSV
#write.csv(data, file = "usuarios_con_NA.csv", row.names = FALSE)
# Dividir los datos en conjunto de entrenamiento y conjunto de prueba
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.7 * nrow(data), replace = FALSE)
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
# Entrenar el modelo KNN
k <- 1  # Número de vecinos cercanos
knn_model <- knn(
train = as.matrix(train_data[, "numero_alergias"]),
test = as.matrix(test_data[, "numero_alergias"]),
cl = train_data[, "alergias"],
k = k
)
View(data)
# Cargar paquetes necesarios
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
# Reemplazar campos vacíos con NA
data[data == ""] <- "Nada"
# Guardar el dataset con valores NA como un nuevo archivo CSV
#write.csv(data, file = "usuarios_con_NA.csv", row.names = FALSE)
# Dividir los datos en conjunto de entrenamiento y conjunto de prueba
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.7 * nrow(data), replace = FALSE)
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
# Entrenar el modelo KNN
k <- 1  # Número de vecinos cercanos
knn_model <- knn(
train = as.matrix(train_data[, "numero_alergias"]),
test = as.matrix(test_data[, "numero_alergias"]),
cl = train_data[, "alergias"],
k = k
)
# Cargar paquetes necesarios
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# Reemplazar campos vacíos con NA
data[data == ""] <- "Nada"
# Dividir los datos en conjunto de entrenamiento y conjunto de prueba
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.7 * nrow(data), replace = FALSE)
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
# Entrenar el modelo KNN
k <- 1  # Número de vecinos cercanos
knn_model <- knn(
train = as.matrix(train_data[, "numero_alergias"]),
test = as.matrix(test_data[, "numero_alergias"]),
cl = train_data[, "alergias"],
k = k
)
# Imprimir las predicciones
cat("Predicciones del modelo KNN:\n")
print(knn_model)
plot(knn_model)
View(data)
# Cargar paquetes necesarios
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# Reemplazar campos vacíos con NA
data[data == ""] <- NA
# Imputación por la media
mean_vals <- colMeans(data[, "numero_alergias"], na.rm = TRUE)
# Cargar paquetes necesarios
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# Reemplazar campos vacíos con NA
data[data == ""] <- NA
# Imputación por la media
mean_vals <- colMeans(data[, "numero_alergias"], na.rm = TRUE)
# Cargar paquetes necesarios
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# Reemplazar campos vacíos con NA
data[data == ""] <- NA
# Imputación por la media
mean_vals <- colMeans(data[, "numero_alergias"], na.rm = TRUE)
# Cargar paquetes necesarios
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# Reemplazar campos vacíos con NA
data[data == ""] <- NA
# Imputación por la media
mean_vals <- colMeans(data[, "numero_alergias"], na.rm = TRUE)
# Cargar paquetes necesarios
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# Reemplazar campos vacíos con NA
data[data == ""] <- NA
# Imputación por la media
mean_vals <- colMeans(data[, "numero_alergias"], na.rm = TRUE)
# Cargar paquetes necesarios
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# Reemplazar campos vacíos con NA
data[data == ""] <- NA
# Imputación por la media
mean_vals <- colMeans(data[, "numero_alergias"], na.rm = TRUE)
# Cargar paquetes necesarios
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# Reemplazar campos vacíos con NA
data[data == ""] <- NA
# Imputación por la media
mean_vals <- colMeans(data[, "numero_alergias"], na.rm = TRUE)
