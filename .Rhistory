library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
num_alergias <- data$numero_alergias
# tabla de frecuencias de los numeros de alergias
frecuencia_num_alergias <- table(num_alergias)
# ordenar frecuencias de la tabla de manera descendente
frecuencia_num_alergias_ordenadas <- sort(frecuencia_num_alergias, decreasing = TRUE)
# Predicción utilizando Regresión Lineal
datos <- data.frame(frecuencia_num_alergias_ordenadas)
x <- as.numeric(datos$num_alergias)
y <- datos$Freq
# Ajuste del modelo de regresión lineal
modelo_rl <- lm(y ~ x)
# Realizar predicción utilizando regresión lineal
numero_de_alergias <- 7
prediccion_rl <- predict(modelo_rl, data.frame(x = numero_de_alergias))
# Imprimir la predicción utilizando regresión lineal
cat("Predicción usando Regresión Lineal para nuevo_x =", numero_de_alergias, ":", prediccion_rl, "\n")
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
datos_prueba <- data.frame(x = numero_de_alergias)
# Ajuste del modelo KNN
k <- 1 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", numero_de_alergias, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(numero_de_alergias, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, numero_de_alergias, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
num_alergias <- data$numero_alergias
# tabla de frecuencias de los numeros de alergias
frecuencia_num_alergias <- table(num_alergias)
# ordenar frecuencias de la tabla de manera descendente
frecuencia_num_alergias_ordenadas <- sort(frecuencia_num_alergias, decreasing = TRUE)
# Predicción utilizando Regresión Lineal
datos <- data.frame(frecuencia_num_alergias_ordenadas)
x <- as.numeric(datos$num_alergias)
y <- datos$Freq
# Ajuste del modelo de regresión lineal
modelo_rl <- lm(y ~ x)
# Realizar predicción utilizando regresión lineal
numero_de_alergias <- 7
prediccion_rl <- predict(modelo_rl, data.frame(x = numero_de_alergias))
# Imprimir la predicción utilizando regresión lineal
cat("Predicción usando Regresión Lineal para 6 alergias =", numero_de_alergias, ":", prediccion_rl, "\n")
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
datos_prueba <- data.frame(x = numero_de_alergias)
# Ajuste del modelo KNN
k <- 1 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para 6 alergias =", numero_de_alergias, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(numero_de_alergias, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, numero_de_alergias, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
num_alergias <- data$numero_alergias
# tabla de frecuencias de los numeros de alergias
frecuencia_num_alergias <- table(num_alergias)
# ordenar frecuencias de la tabla de manera descendente
frecuencia_num_alergias_ordenadas <- sort(frecuencia_num_alergias, decreasing = TRUE)
# Predicción utilizando Regresión Lineal
datos <- data.frame(frecuencia_num_alergias_ordenadas)
x <- as.numeric(datos$num_alergias)
y <- datos$Freq
# Ajuste del modelo de regresión lineal
modelo_rl <- lm(y ~ x)
# Realizar predicción utilizando regresión lineal
numero_de_alergias <- 7
prediccion_rl <- predict(modelo_rl, data.frame(x = numero_de_alergias))
# Imprimir la predicción utilizando regresión lineal
cat("Predicción usando Regresión Lineal para numero_de_alergias =", numero_de_alergias-1, ":", prediccion_rl, "\n")
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
datos_prueba <- data.frame(x = numero_de_alergias)
# Ajuste del modelo KNN
k <- 1 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para 6 alergias =", numero_de_alergias, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(numero_de_alergias, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, numero_de_alergias, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
num_alergias <- data$numero_alergias
# tabla de frecuencias de los numeros de alergias
frecuencia_num_alergias <- table(num_alergias)
# ordenar frecuencias de la tabla de manera descendente
frecuencia_num_alergias_ordenadas <- sort(frecuencia_num_alergias, decreasing = TRUE)
# Predicción utilizando Regresión Lineal
datos <- data.frame(frecuencia_num_alergias_ordenadas)
x <- as.numeric(datos$num_alergias)
y <- datos$Freq
# Ajuste del modelo de regresión lineal
modelo_rl <- lm(y ~ x)
# Realizar predicción utilizando regresión lineal
numero_de_alergias <- 7
prediccion_rl <- predict(modelo_rl, data.frame(x = numero_de_alergias))
# Imprimir la predicción utilizando regresión lineal
cat("Predicción usando Regresión Lineal para numero_de_alergias =", numero_de_alergias-1, ":", prediccion_rl, "\n")
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
datos_prueba <- data.frame(x = numero_de_alergias)
# Ajuste del modelo KNN
k <- 1 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para numero_de_alergias =", numero_de_alergias-1, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(numero_de_alergias, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, numero_de_alergias, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
num_alergias <- data$numero_alergias
# tabla de frecuencias de los numeros de alergias
frecuencia_num_alergias <- table(num_alergias)
# ordenar frecuencias de la tabla de manera descendente
frecuencia_num_alergias_ordenadas <- sort(frecuencia_num_alergias, decreasing = TRUE)
# Predicción utilizando Regresión Lineal
datos <- data.frame(frecuencia_num_alergias_ordenadas)
x <- as.numeric(datos$num_alergias)
y <- datos$Freq
# Ajuste del modelo de regresión lineal
modelo_rl <- lm(y ~ x)
# Realizar predicción utilizando regresión lineal
nuevo_x_rl <- 7
prediccion_rl <- predict(modelo_rl, data.frame(x = nuevo_x_rl))
# Imprimir la predicción utilizando regresión lineal
cat("Predicción usando Regresión Lineal para nuevo_x =", nuevo_x_rl, ":", prediccion_rl, "\n")
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
# Datos de prueba para KNN
nuevo_x_knn <- data.frame(x = nuevo_x_rl)
# Ajuste del modelo KNN
k <- 3  # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = nuevo_x_knn,
cl = datos_entrenamiento$y,
k = k)
# Calcular precisión utilizando KNN con validación cruzada
precision_knn <- knn.cv(train = datos_entrenamiento[, "x"],
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción y precisión utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
cat("Precisión de KNN con k =", k, ":", precision_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(nuevo_x_rl, prediccion_rl, col = "purple", pch = 16)
points(nuevo_x_rl, prediccion_knn, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal", "KNN"),
col = c("black", "blue", "red", "green"), pch = c(16, 16, 16, 16))
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
num_alergias <- data$numero_alergias
# tabla de frecuencias de los numeros de alergias
frecuencia_num_alergias <- table(num_alergias)
# ordenar frecuencias de la tabla de manera descendente
frecuencia_num_alergias_ordenadas <- sort(frecuencia_num_alergias, decreasing = TRUE)
# Predicción utilizando Regresión Lineal
datos <- data.frame(frecuencia_num_alergias_ordenadas)
x <- as.numeric(datos$num_alergias)
y <- datos$Freq
# Ajuste del modelo de regresión lineal
modelo_rl <- lm(y ~ x)
# Realizar predicción utilizando regresión lineal
nuevo_x_rl <- 7
prediccion_rl <- predict(modelo_rl, data.frame(x = nuevo_x_rl))
# Imprimir la predicción utilizando regresión lineal
cat("Predicción usando Regresión Lineal para nuevo_x =", nuevo_x_rl, ":", prediccion_rl, "\n")
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
# Datos de prueba para KNN
nuevo_x_knn <- data.frame(x = nuevo_x_rl)
# Ajuste del modelo KNN
k <- 3  # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = nuevo_x_knn,
cl = datos_entrenamiento$y,
k = k)
# Calcular precisión utilizando KNN con validación cruzada
precision_knn <- knn.cv(train = datos_entrenamiento[, "x"],
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción y precisión utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
cat("Precisión de KNN con k =", k, ":", precision_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(nuevo_x_rl, prediccion_rl, col = "purple", pch = 16)
points(nuevo_x_rl, prediccion_knn, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal", "KNN"),
col = c("black", "blue", "red", "green"), pch = c(16, 16, 16, 16))
# Realizar predicción utilizando regresión lineal
nuevo_x_rl <- 7
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
num_alergias <- data$numero_alergias
# tabla de frecuencias de los numeros de alergias
frecuencia_num_alergias <- table(num_alergias)
# ordenar frecuencias de la tabla de manera descendente
frecuencia_num_alergias_ordenadas <- sort(frecuencia_num_alergias, decreasing = TRUE)
# Predicción utilizando Regresión Lineal
datos <- data.frame(frecuencia_num_alergias_ordenadas)
x <- as.numeric(datos$num_alergias)
y <- datos$Freq
# Ajuste del modelo de regresión lineal
modelo_rl <- lm(y ~ x)
# Realizar predicción utilizando regresión lineal
nuevo_x_rl <- 7
prediccion_rl <- predict(modelo_rl, data.frame(x = nuevo_x_rl))
# Imprimir la predicción utilizando regresión lineal
cat("Predicción usando Regresión Lineal para nuevo_x =", nuevo_x_rl, ":", prediccion_rl, "\n")
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
# Datos de prueba para KNN
nuevo_x_knn <- data.frame(x = nuevo_x_rl)
# Ajuste del modelo KNN
k <- 3  # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = nuevo_x_knn,
cl = datos_entrenamiento$y,
k = k)
# Calcular precisión utilizando KNN con validación cruzada
precision_knn <- knn.cv(train = datos_entrenamiento[, "x"],
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción y precisión utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
cat("Precisión de KNN con k =", k, ":", precision_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# Elegir la columna numero_alergias del dataset
num_alergias <- data$numero_alergias
# Tabla de frecuencias de los números de alergias
frecuencia_num_alergias <- table(num_alergias)
# Ordenar frecuencias de manera descendente
frecuencia_num_alergias_ordenadas <- sort(frecuencia_num_alergias, decreasing = TRUE)
# Datos para la predicción
nuevo_x_knn <- 7
# Datos de entrenamiento para KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(frecuencia_num_alergias_ordenadas)),
y = as.numeric(as.character(names(frecuencia_num_alergias_ordenadas)))
)
# Ajuste del modelo KNN
k <- 3  # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = data.frame(x = nuevo_x_knn),
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_knn, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(frecuencia_num_alergias_ordenadas,
ylab = "Número de alergias", xlab = "Cantidad de usuarios")
points(nuevo_x_knn, prediccion_knn, col = "purple", pch = 16)
# Datos de entrenamiento para KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(frecuencia_num_alergias_ordenadas)),
y = as.numeric(as.character(names(frecuencia_num_alergias_ordenadas)))
)
# Ajuste del modelo KNN
k <- 3  # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = data.frame(x = nuevo_x_knn),
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_knn, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(frecuencia_num_alergias_ordenadas,
ylab = "Número de alergias", xlab = "Cantidad de usuarios")
points(nuevo_x_knn, prediccion_knn, col = "purple", pch = 16)
# Graficar los resultados
plot(frecuencia_num_alergias_ordenadas,
ylab = "Número de alergias", xlab = "Cantidad de usuarios")
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_knn, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(frecuencia_num_alergias_ordenadas,
ylab = "Número de alergias", xlab = "Cantidad de usuarios")
points(nuevo_x_knn, prediccion_knn, col = "purple", pch = 16)
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
num_alergias <- data$numero_alergias
# tabla de frecuencias de los numeros de alergias
frecuencia_num_alergias <- table(num_alergias)
# ordenar frecuencias de la tabla de manera descendente
frecuencia_num_alergias_ordenadas <- sort(frecuencia_num_alergias, decreasing = TRUE)
# Predicción utilizando Regresión Lineal
datos <- data.frame(frecuencia_num_alergias_ordenadas)
x <- as.numeric(datos$num_alergias)
y <- datos$Freq
# Ajuste del modelo de regresión lineal
modelo_rl <- lm(y ~ x)
# Realizar predicción utilizando regresión lineal
numero_de_alergias <- 7
prediccion_rl <- predict(modelo_rl, data.frame(x = numero_de_alergias))
# Imprimir la predicción utilizando regresión lineal
cat("Predicción usando Regresión Lineal para numero_de_alergias =", numero_de_alergias-1, ":", prediccion_rl, "\n")
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
datos_prueba <- data.frame(x = numero_de_alergias)
# Ajuste del modelo KNN
k <- 1 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para numero_de_alergias =", numero_de_alergias-1, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(numero_de_alergias, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, numero_de_alergias, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
# Ajuste del modelo KNN
k <- 1 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para numero_de_alergias =", numero_de_alergias-1, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(numero_de_alergias, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, numero_de_alergias, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
datos_prueba <- data.frame(x = numero_de_alergias)
# Ajuste del modelo KNN
k <- 1 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para numero_de_alergias =", numero_de_alergias-1, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(numero_de_alergias, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, numero_de_alergias, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
# Ajuste del modelo KNN
k <- 1 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para numero_de_alergias =", numero_de_alergias-1, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
# Ajuste del modelo KNN
k <- 2 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para numero_de_alergias =", numero_de_alergias-1, ":", prediccion_knn, "\n")
# Ajuste del modelo KNN
k <- 3 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para numero_de_alergias =", numero_de_alergias-1, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
# Ajuste del modelo KNN
k <- 4 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para numero_de_alergias =", numero_de_alergias-1, ":", prediccion_knn, "\n")
# Ajuste del modelo KNN
k <- 6 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para numero_de_alergias =", numero_de_alergias-1, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
# Ajuste del modelo KNN
k <- 7 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para numero_de_alergias =", numero_de_alergias-1, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
