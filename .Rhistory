# Predicción utilizando Regresión Lineal
datos <- data.frame(frecuencia_num_alergias_ordenadas)
x <- as.numeric(datos$num_alergias)
y <- datos$Freq
# Ajuste del modelo de regresión lineal
modelo_rl <- lm(y ~ x)
# Realizar predicción utilizando regresión lineal
nuevo_x_rl <- 7
prediccion_rl <- predict(modelo_rl, data.frame(x = nuevo_x_rl))
# Imprimir la predicción utilizando regresión lineal
cat("Predicción usando Regresión Lineal para nuevo_x =", nuevo_x_rl, ":", prediccion_rl, "\n")
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
datos_prueba <- data.frame(x = nuevo_x_rl)
# Ajuste del modelo KNN
k <- 4# Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(nuevo_x_rl, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, nuevo_x_rl, col = "green", pch = 16)
legend("topleft", legend = c("Datos de entrenamiento",
"Modelo ajustado", "Predicciones","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
legend("topleft", legend = c("Datos de entrenamiento",
"Modelo de regresión lineal ajustado", "Predicciones","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
legend("topleft", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Predicciones","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
num_alergias <- data$numero_alergias
# tabla de frecuencias de los numeros de alergias
frecuencia_num_alergias <- table(num_alergias)
# ordenar frecuencias de la tabla de manera descendente
frecuencia_num_alergias_ordenadas <- sort(frecuencia_num_alergias, decreasing = TRUE)
# Predicción utilizando Regresión Lineal
datos <- data.frame(frecuencia_num_alergias_ordenadas)
x <- as.numeric(datos$num_alergias)
y <- datos$Freq
# Ajuste del modelo de regresión lineal
modelo_rl <- lm(y ~ x)
# Realizar predicción utilizando regresión lineal
nuevo_x_rl <- 7
prediccion_rl <- predict(modelo_rl, data.frame(x = nuevo_x_rl))
# Imprimir la predicción utilizando regresión lineal
cat("Predicción usando Regresión Lineal para nuevo_x =", nuevo_x_rl, ":", prediccion_rl, "\n")
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
datos_prueba <- data.frame(x = nuevo_x_rl)
# Ajuste del modelo KNN
k <- 4# Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(nuevo_x_rl, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, nuevo_x_rl, col = "green", pch = 16)
legend("topleft", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Predicciones","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
legend("out", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Predicciones","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Predicciones","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
num_alergias <- data$numero_alergias
# tabla de frecuencias de los numeros de alergias
frecuencia_num_alergias <- table(num_alergias)
# ordenar frecuencias de la tabla de manera descendente
frecuencia_num_alergias_ordenadas <- sort(frecuencia_num_alergias, decreasing = TRUE)
# Predicción utilizando Regresión Lineal
datos <- data.frame(frecuencia_num_alergias_ordenadas)
x <- as.numeric(datos$num_alergias)
y <- datos$Freq
# Ajuste del modelo de regresión lineal
modelo_rl <- lm(y ~ x)
# Realizar predicción utilizando regresión lineal
nuevo_x_rl <- 7
prediccion_rl <- predict(modelo_rl, data.frame(x = nuevo_x_rl))
# Imprimir la predicción utilizando regresión lineal
cat("Predicción usando Regresión Lineal para nuevo_x =", nuevo_x_rl, ":", prediccion_rl, "\n")
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
datos_prueba <- data.frame(x = nuevo_x_rl)
# Ajuste del modelo KNN
k <- 4# Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(nuevo_x_rl, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, nuevo_x_rl, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Predicciones","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
# Ajuste del modelo KNN
k <- 3# Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(nuevo_x_rl, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, nuevo_x_rl, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Predicciones","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
# Precision del modelo
precision <- sum(predicciones == etiquetas_reales) / length(predicciones)
cat(" con una precisión de", precision)
datos_prueba <- data.frame(x = nuevo_x_rl)
# Ajuste del modelo KNN
k <- 3# Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Precision del modelo
precision <- sum(predicciones == etiquetas_reales) / length(predicciones)
# Precision del modelo
precision <- sum(prediccion_knn == etiquetas_reales) / length(predicciones)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
num_alergias <- data$numero_alergias
# tabla de frecuencias de los numeros de alergias
frecuencia_num_alergias <- table(num_alergias)
# ordenar frecuencias de la tabla de manera descendente
frecuencia_num_alergias_ordenadas <- sort(frecuencia_num_alergias, decreasing = TRUE)
# Predicción utilizando Regresión Lineal
datos <- data.frame(frecuencia_num_alergias_ordenadas)
x <- as.numeric(datos$num_alergias)
y <- datos$Freq
# Ajuste del modelo de regresión lineal
modelo_rl <- lm(y ~ x)
# Realizar predicción utilizando regresión lineal
nuevo_x_rl <- 7
prediccion_rl <- predict(modelo_rl, data.frame(x = nuevo_x_rl))
# Imprimir la predicción utilizando regresión lineal
cat("Predicción usando Regresión Lineal para nuevo_x =", nuevo_x_rl, ":", prediccion_rl, "\n")
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
datos_prueba <- data.frame(x = nuevo_x_rl)
# Ajuste del modelo KNN
k <- 3# Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Precision del modelo
precision <- sum(prediccion_knn == etiquetas_reales) / length(predicciones)
source("C:/Users/ar/Desktop/reporte-alergias/knn_ejemplo.R", encoding = 'UTF-8')
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Calcular precisión utilizando KNN con validación cruzada
precision_knn <- knn.cv(train = datos_entrenamiento[, "x"],
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción y precisión utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
cat("Precisión de KNN con k =", k, ":", precision_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(nuevo_x_rl, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, nuevo_x_rl, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
num_alergias <- data$numero_alergias
# tabla de frecuencias de los numeros de alergias
frecuencia_num_alergias <- table(num_alergias)
# ordenar frecuencias de la tabla de manera descendente
frecuencia_num_alergias_ordenadas <- sort(frecuencia_num_alergias, decreasing = TRUE)
# Predicción utilizando Regresión Lineal
datos <- data.frame(frecuencia_num_alergias_ordenadas)
x <- as.numeric(datos$num_alergias)
y <- datos$Freq
# Ajuste del modelo de regresión lineal
modelo_rl <- lm(y ~ x)
# Realizar predicción utilizando regresión lineal
nuevo_x_rl <- 7
prediccion_rl <- predict(modelo_rl, data.frame(x = nuevo_x_rl))
# Imprimir la predicción utilizando regresión lineal
cat("Predicción usando Regresión Lineal para nuevo_x =", nuevo_x_rl, ":", prediccion_rl, "\n")
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
datos_prueba <- data.frame(x = nuevo_x_rl)
# Ajuste del modelo KNN
k <- 3# Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Calcular precisión utilizando KNN con validación cruzada
precision_knn <- knn.cv(train = datos_entrenamiento[, "x"],
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción y precisión utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
cat("Precisión de KNN con k =", k, ":", precision_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(nuevo_x_rl, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, nuevo_x_rl, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
num_alergias <- data$numero_alergias
# tabla de frecuencias de los numeros de alergias
frecuencia_num_alergias <- table(num_alergias)
# ordenar frecuencias de la tabla de manera descendente
frecuencia_num_alergias_ordenadas <- sort(frecuencia_num_alergias, decreasing = TRUE)
# Predicción utilizando Regresión Lineal
datos <- data.frame(frecuencia_num_alergias_ordenadas)
x <- as.numeric(datos$num_alergias)
y <- datos$Freq
# Ajuste del modelo de regresión lineal
modelo_rl <- lm(y ~ x)
# Realizar predicción utilizando regresión lineal
nuevo_x_rl <- 7
prediccion_rl <- predict(modelo_rl, data.frame(x = nuevo_x_rl))
# Imprimir la predicción utilizando regresión lineal
cat("Predicción usando Regresión Lineal para nuevo_x =", nuevo_x_rl, ":", prediccion_rl, "\n")
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
datos_prueba <- data.frame(x = nuevo_x_rl)
# Ajuste del modelo KNN
k <- 3# Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Calcular precisión utilizando KNN con validación cruzada
precision_knn <- knn.cv(train = datos_entrenamiento[, "x"],
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción y precisión utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Imprimir la predicción y precisión utilizando KNN
cat("Precisión de KNN con k =", k, ":", precision_knn, "\n")
# calcular presicion del modelo
accuracy <- sum(prediccion_knn == ) datos_entrenamiento$y / length(datos_entrenamiento$y)
cat("Precision del modelo ", accuracy)
# calcular presicion del modelo
accuracy <- sum(prediccion_knn == datos_entrenamiento$y) / length(datos_entrenamiento$y)
cat("Precision del modelo ", accuracy)
# Ajuste del modelo KNN
k <- 6# Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# calcular presicion del modelo
accuracy <- sum(prediccion_knn == datos_entrenamiento$y) / length(datos_entrenamiento$y)
cat("Precision del modelo ", accuracy)
source("C:/Users/ar/Desktop/reporte-alergias/knn_ejemplo.R", encoding = 'UTF-8')
library(class)
# Cargar el dataset
data <- read.csv("usuarios.csv", sep=";")
# elegir la columna numero_alergias del DS
num_alergias <- data$numero_alergias
# tabla de frecuencias de los numeros de alergias
frecuencia_num_alergias <- table(num_alergias)
# ordenar frecuencias de la tabla de manera descendente
frecuencia_num_alergias_ordenadas <- sort(frecuencia_num_alergias, decreasing = TRUE)
# Predicción utilizando Regresión Lineal
datos <- data.frame(frecuencia_num_alergias_ordenadas)
x <- as.numeric(datos$num_alergias)
y <- datos$Freq
# Ajuste del modelo de regresión lineal
modelo_rl <- lm(y ~ x)
# Realizar predicción utilizando regresión lineal
nuevo_x_rl <- 7
prediccion_rl <- predict(modelo_rl, data.frame(x = nuevo_x_rl))
# Imprimir la predicción utilizando regresión lineal
cat("Predicción usando Regresión Lineal para nuevo_x =", nuevo_x_rl, ":", prediccion_rl, "\n")
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
datos_prueba <- data.frame(x = nuevo_x_rl)
# Ajuste del modelo KNN
k <- 3# Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Precision del modelo
precision <- sum(prediccion_knn == etiquetas_reales) / length(predicciones)
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
datos_prueba <- data.frame(x = nuevo_x_rl)
# Ajuste del modelo KNN
k <- 3# Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
cat(" con una precisión de", precision)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(nuevo_x_rl, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, nuevo_x_rl, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
source("C:/Users/ar/Desktop/reporte-alergias/knn_ejemplo.R", encoding = 'UTF-8')
?knn.cv
precision_knn <- knn.cv(train = datos_entrenamiento[, "x"],
cl = datos_entrenamiento$y,
k = k)
precision_knn
source("C:/Users/ar/Desktop/reporte-alergias/knn_ejemplo.R", encoding = 'UTF-8')
# Ajuste del modelo KNN
k <- 30# Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(nuevo_x_rl, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, nuevo_x_rl, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
# Ajuste del modelo KNN
k <- 100# Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
# Ajuste del modelo KNN
k <- 99 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Ajuste del modelo KNN
k <- 2 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(nuevo_x_rl, prediccion_rl, col = "purple", pch = 16)
# Ajuste del modelo KNN
k <- 1 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(nuevo_x_rl, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, nuevo_x_rl, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
# Ajuste del modelo KNN
k <- 6 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(nuevo_x_rl, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, nuevo_x_rl, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
# Imprimir la predicción utilizando regresión lineal
cat("Predicción usando Regresión Lineal para nuevo_x =", nuevo_x_rl, ":", prediccion_rl, "\n")
# Predicción utilizando KNN
datos_entrenamiento <- data.frame(
x = as.numeric(as.character(datos$num_alergias)),
y = as.numeric(as.character(datos$Freq))
)
datos_prueba <- data.frame(x = nuevo_x_rl)
# Ajuste del modelo KNN
k <- 1 # Valor de K
prediccion_knn <- knn(train = datos_entrenamiento[, "x"],
test = datos_prueba,
cl = datos_entrenamiento$y,
k = k)
# Imprimir la predicción utilizando KNN
cat("Predicción usando KNN para nuevo_x =", nuevo_x_rl, ":", prediccion_knn, "\n")
# Graficar los resultados
plot(datos$num_alergias, datos$Freq, main = "Comparación Regresión Lineal vs. KNN",
xlab = "Número de usuarios", ylab = "Número de alergias")
abline(modelo_rl, col = "blue")
points(nuevo_x_rl, prediccion_rl, col = "purple", pch = 16)
points(prediccion_knn, nuevo_x_rl, col = "green", pch = 16)
legend("topright", legend = c("Datos de entrenamiento",
"Modelo de RL ajustado", "Regresión lineal","KNN"),
col = c("black", "blue", "red","green"), pch = c(16, 16, 16, 16))
source("C:/Users/ar/Desktop/reporte-alergias/knn_ejemplo.R", encoding = 'UTF-8')
source("C:/Users/ar/Desktop/reporte-alergias/knn_ejemplo.R", encoding = 'UTF-8')
